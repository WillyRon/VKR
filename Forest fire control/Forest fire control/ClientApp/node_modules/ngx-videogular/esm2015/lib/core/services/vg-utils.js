/**
 * @fileoverview added by tsickle
 * Generated from: lib/core/services/vg-utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class VgUtils {
    /**
     * Inspired by Paul Irish
     * https://gist.github.com/paulirish/211209
     * @return {?} z-Index
     */
    static getZIndex() {
        /** @type {?} */
        let zIndex = 1;
        /** @type {?} */
        let elementZIndex;
        /** @type {?} */
        const tags = document.getElementsByTagName('*');
        for (let i = 0, l = tags.length; i < l; i++) {
            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);
            if (elementZIndex > zIndex) {
                zIndex = elementZIndex + 1;
            }
        }
        return zIndex;
    }
    // Very simple mobile detection, not 100% reliable
    /**
     * @return {?}
     */
    static isMobileDevice() {
        return (typeof window.orientation !== 'undefined') || (navigator.userAgent.indexOf('IEMobile') !== -1);
    }
    /**
     * @return {?}
     */
    static isiOSDevice() {
        return (navigator.userAgent.match(/ip(hone|ad|od)/i) && !navigator.userAgent.match(/(iemobile)[\/\s]?([\w\.]*)/i));
    }
    /**
     * @return {?}
     */
    static isCordova() {
        return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;
    }
}
VgUtils.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ VgUtils.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function VgUtils_Factory() { return new VgUtils(); }, token: VgUtils, providedIn: "root" });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctdXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtdmlkZW9ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL3NlcnZpY2VzL3ZnLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFLM0MsTUFBTSxPQUFPLE9BQU87Ozs7OztJQU1sQixNQUFNLENBQUMsU0FBUzs7WUFDVixNQUFNLEdBQUcsQ0FBQzs7WUFDVixhQUFxQjs7Y0FFbkIsSUFBSSxHQUFHLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUM7UUFFL0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxhQUFhLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUUxRSxJQUFJLGFBQWEsR0FBRyxNQUFNLEVBQUU7Z0JBQzFCLE1BQU0sR0FBRyxhQUFhLEdBQUcsQ0FBQyxDQUFDO2FBQzVCO1NBQ0Y7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOzs7OztJQUdELE1BQU0sQ0FBQyxjQUFjO1FBQ25CLE9BQU8sQ0FBQyxPQUFPLE1BQU0sQ0FBQyxXQUFXLEtBQUssV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pHLENBQUM7Ozs7SUFFRCxNQUFNLENBQUMsV0FBVztRQUNoQixPQUFPLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQztJQUNySCxDQUFDOzs7O0lBRUQsTUFBTSxDQUFDLFNBQVM7UUFDZCxPQUFPLFFBQVEsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzNGLENBQUM7OztZQXJDRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFZnVXRpbHMge1xuICAvKipcbiAgICogSW5zcGlyZWQgYnkgUGF1bCBJcmlzaFxuICAgKiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9wYXVsaXJpc2gvMjExMjA5XG4gICAqIEByZXR1cm5zIHotSW5kZXhcbiAgICovXG4gIHN0YXRpYyBnZXRaSW5kZXgoKTogbnVtYmVyIHtcbiAgICBsZXQgekluZGV4ID0gMTtcbiAgICBsZXQgZWxlbWVudFpJbmRleDogbnVtYmVyO1xuXG4gICAgY29uc3QgdGFncyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCcqJyk7XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IHRhZ3MubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBlbGVtZW50WkluZGV4ID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUodGFnc1tpXSlbJ3otaW5kZXgnXSwgMTApO1xuXG4gICAgICBpZiAoZWxlbWVudFpJbmRleCA+IHpJbmRleCkge1xuICAgICAgICB6SW5kZXggPSBlbGVtZW50WkluZGV4ICsgMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gekluZGV4O1xuICB9XG5cbiAgLy8gVmVyeSBzaW1wbGUgbW9iaWxlIGRldGVjdGlvbiwgbm90IDEwMCUgcmVsaWFibGVcbiAgc3RhdGljIGlzTW9iaWxlRGV2aWNlKCkge1xuICAgIHJldHVybiAodHlwZW9mIHdpbmRvdy5vcmllbnRhdGlvbiAhPT0gJ3VuZGVmaW5lZCcpIHx8IChuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0lFTW9iaWxlJykgIT09IC0xKTtcbiAgfVxuXG4gIHN0YXRpYyBpc2lPU0RldmljZSgpIHtcbiAgICByZXR1cm4gKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lwKGhvbmV8YWR8b2QpL2kpICYmICFuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC8oaWVtb2JpbGUpW1xcL1xcc10/KFtcXHdcXC5dKikvaSkpO1xuICB9XG5cbiAgc3RhdGljIGlzQ29yZG92YSgpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuVVJMLmluZGV4T2YoJ2h0dHA6Ly8nKSA9PT0gLTEgJiYgZG9jdW1lbnQuVVJMLmluZGV4T2YoJ2h0dHBzOi8vJykgPT09IC0xO1xuICB9XG59XG4iXX0=