/**
 * @fileoverview added by tsickle
 * Generated from: lib/controls/vg-controls.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { VgControls } from './vg-controls';
import { VgFullscreen } from './vg-fullscreen/vg-fullscreen';
import { VgMute } from './vg-mute/vg-mute';
import { VgVolume } from './vg-volume/vg-volume';
import { VgPlayPause } from './vg-play-pause/vg-play-pause';
import { VgPlaybackButton } from './vg-playback-button/vg-playback-button';
import { VgScrubBar } from './vg-scrub-bar/vg-scrub-bar';
import { VgScrubBarBufferingTime } from './vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time';
import { VgScrubBarCuePoints } from './vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points';
import { VgScrubBarCurrentTime } from './vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time';
import { VgTimeDisplay, VgUtcPipe } from './vg-time-display/vg-time-display';
import { VgTrackSelector } from './vg-track-selector/vg-track-selector';
import { VgControlsHidden } from '../core/services/vg-controls-hidden';
import { VgQualitySelector } from './vg-quality-selector/vg-quality-selector';
export class VgControlsModule {
}
VgControlsModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [
                    VgControls,
                    VgFullscreen,
                    VgMute,
                    VgVolume,
                    VgPlayPause,
                    VgPlaybackButton,
                    VgScrubBar,
                    VgScrubBarBufferingTime,
                    VgScrubBarCuePoints,
                    VgScrubBarCurrentTime,
                    VgTimeDisplay,
                    VgUtcPipe,
                    VgTrackSelector,
                    VgQualitySelector
                ],
                exports: [
                    VgControls,
                    VgFullscreen,
                    VgMute,
                    VgVolume,
                    VgPlayPause,
                    VgPlaybackButton,
                    VgScrubBar,
                    VgScrubBarBufferingTime,
                    VgScrubBarCuePoints,
                    VgScrubBarCurrentTime,
                    VgTimeDisplay,
                    VgUtcPipe,
                    VgTrackSelector,
                    VgQualitySelector
                ],
                providers: [VgControlsHidden]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctY29udHJvbHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXZpZGVvZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvdmctY29udHJvbHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDN0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDM0UsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdFQUF3RSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdFQUFnRSxDQUFDO0FBQ3JHLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQzNHLE9BQU8sRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBc0M5RSxNQUFNLE9BQU8sZ0JBQWdCOzs7WUFwQzVCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7Z0JBQ3ZCLFlBQVksRUFBRTtvQkFDWixVQUFVO29CQUNWLFlBQVk7b0JBQ1osTUFBTTtvQkFDTixRQUFRO29CQUNSLFdBQVc7b0JBQ1gsZ0JBQWdCO29CQUNoQixVQUFVO29CQUNWLHVCQUF1QjtvQkFDdkIsbUJBQW1CO29CQUNuQixxQkFBcUI7b0JBQ3JCLGFBQWE7b0JBQ2IsU0FBUztvQkFDVCxlQUFlO29CQUNmLGlCQUFpQjtpQkFDbEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLFVBQVU7b0JBQ1YsWUFBWTtvQkFDWixNQUFNO29CQUNOLFFBQVE7b0JBQ1IsV0FBVztvQkFDWCxnQkFBZ0I7b0JBQ2hCLFVBQVU7b0JBQ1YsdUJBQXVCO29CQUN2QixtQkFBbUI7b0JBQ25CLHFCQUFxQjtvQkFDckIsYUFBYTtvQkFDYixTQUFTO29CQUNULGVBQWU7b0JBQ2YsaUJBQWlCO2lCQUNsQjtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQzthQUM5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgVmdDb250cm9scyB9IGZyb20gJy4vdmctY29udHJvbHMnO1xuaW1wb3J0IHsgVmdGdWxsc2NyZWVuIH0gZnJvbSAnLi92Zy1mdWxsc2NyZWVuL3ZnLWZ1bGxzY3JlZW4nO1xuaW1wb3J0IHsgVmdNdXRlIH0gZnJvbSAnLi92Zy1tdXRlL3ZnLW11dGUnO1xuaW1wb3J0IHsgVmdWb2x1bWUgfSBmcm9tICcuL3ZnLXZvbHVtZS92Zy12b2x1bWUnO1xuaW1wb3J0IHsgVmdQbGF5UGF1c2UgfSBmcm9tICcuL3ZnLXBsYXktcGF1c2UvdmctcGxheS1wYXVzZSc7XG5pbXBvcnQgeyBWZ1BsYXliYWNrQnV0dG9uIH0gZnJvbSAnLi92Zy1wbGF5YmFjay1idXR0b24vdmctcGxheWJhY2stYnV0dG9uJztcbmltcG9ydCB7IFZnU2NydWJCYXIgfSBmcm9tICcuL3ZnLXNjcnViLWJhci92Zy1zY3J1Yi1iYXInO1xuaW1wb3J0IHsgVmdTY3J1YkJhckJ1ZmZlcmluZ1RpbWUgfSBmcm9tICcuL3ZnLXNjcnViLWJhci92Zy1zY3J1Yi1iYXItYnVmZmVyaW5nLXRpbWUvdmctc2NydWItYmFyLWJ1ZmZlcmluZy10aW1lJztcbmltcG9ydCB7IFZnU2NydWJCYXJDdWVQb2ludHMgfSBmcm9tICcuL3ZnLXNjcnViLWJhci92Zy1zY3J1Yi1iYXItY3VlLXBvaW50cy92Zy1zY3J1Yi1iYXItY3VlLXBvaW50cyc7XG5pbXBvcnQgeyBWZ1NjcnViQmFyQ3VycmVudFRpbWUgfSBmcm9tICcuL3ZnLXNjcnViLWJhci92Zy1zY3J1Yi1iYXItY3VycmVudC10aW1lL3ZnLXNjcnViLWJhci1jdXJyZW50LXRpbWUnO1xuaW1wb3J0IHsgVmdUaW1lRGlzcGxheSwgVmdVdGNQaXBlIH0gZnJvbSAnLi92Zy10aW1lLWRpc3BsYXkvdmctdGltZS1kaXNwbGF5JztcbmltcG9ydCB7IFZnVHJhY2tTZWxlY3RvciB9IGZyb20gJy4vdmctdHJhY2stc2VsZWN0b3IvdmctdHJhY2stc2VsZWN0b3InO1xuaW1wb3J0IHsgVmdDb250cm9sc0hpZGRlbiB9IGZyb20gJy4uL2NvcmUvc2VydmljZXMvdmctY29udHJvbHMtaGlkZGVuJztcbmltcG9ydCB7IFZnUXVhbGl0eVNlbGVjdG9yIH0gZnJvbSAnLi92Zy1xdWFsaXR5LXNlbGVjdG9yL3ZnLXF1YWxpdHktc2VsZWN0b3InO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgVmdDb250cm9scyxcbiAgICBWZ0Z1bGxzY3JlZW4sXG4gICAgVmdNdXRlLFxuICAgIFZnVm9sdW1lLFxuICAgIFZnUGxheVBhdXNlLFxuICAgIFZnUGxheWJhY2tCdXR0b24sXG4gICAgVmdTY3J1YkJhcixcbiAgICBWZ1NjcnViQmFyQnVmZmVyaW5nVGltZSxcbiAgICBWZ1NjcnViQmFyQ3VlUG9pbnRzLFxuICAgIFZnU2NydWJCYXJDdXJyZW50VGltZSxcbiAgICBWZ1RpbWVEaXNwbGF5LFxuICAgIFZnVXRjUGlwZSxcbiAgICBWZ1RyYWNrU2VsZWN0b3IsXG4gICAgVmdRdWFsaXR5U2VsZWN0b3JcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFZnQ29udHJvbHMsXG4gICAgVmdGdWxsc2NyZWVuLFxuICAgIFZnTXV0ZSxcbiAgICBWZ1ZvbHVtZSxcbiAgICBWZ1BsYXlQYXVzZSxcbiAgICBWZ1BsYXliYWNrQnV0dG9uLFxuICAgIFZnU2NydWJCYXIsXG4gICAgVmdTY3J1YkJhckJ1ZmZlcmluZ1RpbWUsXG4gICAgVmdTY3J1YkJhckN1ZVBvaW50cyxcbiAgICBWZ1NjcnViQmFyQ3VycmVudFRpbWUsXG4gICAgVmdUaW1lRGlzcGxheSxcbiAgICBWZ1V0Y1BpcGUsXG4gICAgVmdUcmFja1NlbGVjdG9yLFxuICAgIFZnUXVhbGl0eVNlbGVjdG9yXG4gIF0sXG4gIHByb3ZpZGVyczogW1ZnQ29udHJvbHNIaWRkZW5dXG59KVxuZXhwb3J0IGNsYXNzIFZnQ29udHJvbHNNb2R1bGUge1xufVxuIl19